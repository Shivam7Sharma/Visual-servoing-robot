<?xml version="1.0"?>
<!-- Revolute-Revolute Manipulator -->
<robot name="vbmbot" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Constants for robot dimensions -->
  <xacro:property name="PI" value="3.1415926535897931"/>
  <xacro:property name="mass" value="1" /> <!-- arbitrary value for mass -->
  <xacro:property name="width" value="0.1" /> <!-- Square dimensions (widthxwidth) of beams -->
  <xacro:property name="height1" value="0.5" /> <!-- Link 1 -->
  <xacro:property name="height2" value="0.5" /> <!-- Link 2 -->
  <xacro:property name="height3" value="0.5" /> <!-- Link 3 -->
  <xacro:property name="camera_link" value="0.05" /> <!-- Size of square 'camera' box -->
  <xacro:property name="axel_offset" value="0.05" /> <!-- Space btw top of beam and the each joint -->
  <xacro:macro name="default_inertial" params="mass">
    <inertial>
      <mass value="${mass}" />
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0" />
    </inertial>
  </xacro:macro>
  <!-- Import all Gazebo-customization elements, including Gazebo colors -->
  <xacro:include filename="$(find vision_based_manipulation)/urdf/vbmbot.gazebo" />
  <!-- Import Rviz colors -->
  <xacro:include filename="$(find vision_based_manipulation)/urdf/materials.xacro" />
  
   <!-- Used for fixing the flatboard to Gazebo 'base_link' -->
   
  <!--<link name="world">
       <visual>
        <material name="GreyTransparent"/>
       </visual>
  </link>-->
  
 
  <!-- Used for fixing robot to Gazebo 'base_link' -->
  <link name="world"/>

  <joint name="joint0" type="fixed">
    <parent link="world"/>
    <child link="link1"/>
  </joint>


  <link name="obj_square">
    <visual>
      <geometry>
        <box size = "0.3 0.3 0.1"/>
      </geometry>
      
      <material name="orange"/>
    </visual>
    <collision>
      <geometry>
        <box size = "0 0 0.1"/>
      </geometry>
    </collision>
    <xacro:default_inertial mass="1"/>
  </link>

  <link name="obj_circle1">
  <visual>
    <geometry>
      <cylinder length = '0.05' radius = '0.03'/>
    </geometry>
    <material name="red"/>
  </visual>
  <collision>
    <geometry>
      <cylinder length = '0.05' radius = '0.03'/>
    </geometry>
  </collision>
  <xacro:default_inertial mass="0.1"/>
  </link>

  <link name="obj_circle2">
  <visual>
    <geometry>
      <cylinder length = '0.05' radius = '0.03'/>
    </geometry>
    
    <material name="blue"/>
  </visual>
  <collision>
    <geometry>
      <cylinder length = '0.05' radius = '0.03'/>
    </geometry>
  </collision>
  <xacro:default_inertial mass="0.1"/> 
  </link>

  <link name="obj_circle3">
    <visual>
      <geometry>
        <cylinder length = '0.05' radius = '0.03'/>
      </geometry>
      
      <material name="green"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length = '0.05' radius = '0.03'/>
      </geometry>
    </collision>
    <xacro:default_inertial mass="0.1"/>
  </link>

  <link name="obj_circle4">
    <visual>
      <geometry>
        <cylinder length = '0.05' radius = '0.03'/>
      </geometry>
      
      <material name="red"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length = '0.05' radius = '0.03'/>
      </geometry>
    </collision>
    <xacro:default_inertial mass="0.1"/>
  </link>  

    
  <joint name="base_to_obj" type="fixed">
    <parent link="world"/>
    <child link="obj_square"/>
    <origin xyz="0.9 0 0" />
  </joint>

  <joint name="obj_to_c1" type="fixed">
    <parent link="obj_square"/>
    <child link="obj_circle1"/>
    <origin xyz="-0.08 0.08 0.1" />
  </joint>

  <joint name="obj_to_c2" type="fixed">
    <parent link="obj_square"/>
    <child link="obj_circle2"/>
    <origin xyz="-0.08 -0.08 0.1" />
  </joint>

  <joint name="obj_to_c3" type="fixed">
    <parent link="obj_square"/>
    <child link="obj_circle3"/>
    <origin xyz="0.08 0.08 0.1" />
  </joint>

  <joint name="obj_to_c4" type="fixed">
    <parent link="obj_square"/>
    <child link="obj_circle4"/>
    <origin xyz="0.08 -0.08 0.1" />
  </joint>


  <!-- Base Link -->
  <link name="link1">
    <collision>
      <origin xyz="0 0 ${height1/2}" rpy="0 0 0"/>
      <geometry>
	<box size="${width} ${width} ${height1}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 ${height1/2}" rpy="0 0 0"/>
      <geometry>
	<box size="${width} ${width} ${height1}"/>
      </geometry>
      <material name="orange"/>
    </visual>

    <inertial>
      <origin xyz="0 0 ${height1/2}" rpy="0 0 0"/>
      <mass value="${mass}"/>
      <inertia
	  ixx="${mass / 12.0 * (width*width + height1*height1)}" ixy="0.0" ixz="0.0"
	  iyy="${mass / 12.0 * (height1*height1 + width*width)}" iyz="0.0"
	  izz="${mass / 12.0 * (width*width + width*width)}"/>
    </inertial>
  </link>

  <joint name="joint1" type="continuous">
    <parent link="link1"/>
    <child link="link2"/>
    <origin xyz="0 0 ${height1 + axel_offset}" rpy="0 1.5708 0"/> <!--<origin xyz="0 0 ${height1 + axel_offset*2}" rpy="0 1.5708 0"/> -->
    <axis xyz="1 0 0"/>
    <dynamics damping="0.7"/>
  </joint>

  <!-- Middle Link -->
  <link name="link2">
    <collision>
      <origin xyz="0 0 ${height2/2 - axel_offset}" rpy="0 0 0"/>
      <geometry>
	<box size="${width} ${width} ${height2}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 ${height2/2 - axel_offset}" rpy="0 0 0"/>
      <geometry>
	<box size="${width} ${width} ${height2}"/>
      </geometry>
      <material name="orange"/>
    </visual>

    <inertial>
      <origin xyz="0 0 ${height2/2 - axel_offset}" rpy="0 0 0"/>
      <mass value="${mass}"/>
      <inertia
	  ixx="${mass / 12.0 * (width*width + height2*height2)}" ixy="0.0" ixz="0.0"
	  iyy="${mass / 12.0 * (height2*height2 + width*width)}" iyz="0.0"
	  izz="${mass / 12.0 * (width*width + width*width)}"/>
    </inertial>
  </link>

  <joint name="joint2" type="continuous">
    <parent link="link2"/>
    <child link="link3"/>
    <origin xyz="-${width+0.02} 0 ${height2 - 0.01}" rpy="0 0 0"/> <!--<origin xyz="0 0 ${height2 + 0.03}" rpy="0 0 0"/> -->
    <axis xyz="1 0 0"/>
    <dynamics damping="0.7"/>
  </joint>

  <link name="link3">
    <collision>
      <origin xyz="0 0 ${height3/2 - axel_offset}" rpy="0 0 0"/>
      <geometry>
	<box size="${width} ${width} ${height3}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 ${height3/2 - axel_offset}" rpy="0 0 0"/>
      <geometry>
	<box size="${width} ${width} 0.6"/>
      </geometry>
      <material name="orange"/>
    </visual>

    <inertial>
      <origin xyz="0 0 ${height3/2 - axel_offset}" rpy="0 0 0"/>
      <mass value="${mass}"/>
      <inertia
	  ixx="${mass / 12.0 * (width*width + height3*height3)}" ixy="0.0" ixz="0.0"
	  iyy="${mass / 12.0 * (height3*height3 + width*width)}" iyz="0.0"
	  izz="${mass / 12.0 * (width*width + width*width)}"/>
    </inertial>
  </link>
  
  <joint name="camera_joint" type="fixed">
    <!--<axis xyz="0 0 0" /> -->
    <origin xyz="${camera_link} 0 ${height3 - axel_offset}" rpy="0 0 0 "/>
    <parent link="link3"/>
    <child link="camera_link"/>
  </joint>

  <!-- Camera -->
  <link name="camera_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
	<box size="${camera_link} ${camera_link} ${camera_link}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
	<box size="${camera_link} ${camera_link} ${camera_link}"/>
      </geometry>
      <material name="red"/>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

  <!-- generate an optical frame http://www.ros.org/reps/rep-0103.html#suffix-frames
      so that ros and opencv can operate on the camera frame correctly -->
  <joint name="camera_optical_joint" type="fixed">
    <!-- these values have to be these values otherwise the gazebo camera image
        won't be aligned properly with the frame it is supposedly originating from -->
    <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/> #${-pi/2} 0 ${-pi/2}
    <parent link="camera_link"/>
    <child link="camera_link_optical"/>
  </joint>

  
  <link name="camera_link_optical">
  </link>

  <transmission name="tran1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint1">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor1">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <transmission name="tran2">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint2">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor2">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

</robot>
